#cloud-config

write_files:
  - path: /run/setup-hostname-override.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      set -x
      source /etc/kube-env
      if [[ -z "${HOSTNAME_OVERRIDE}" ]]; then
        HOSTNAME_OVERRIDE=`curl --silent http://169.254.169.254/2007-01-19/meta-data/local-hostname`
      fi
      if [[ -z "${HOSTNAME_OVERRIDE}" ]]; then
        HOSTNAME_OVERRIDE=`hostname -f`
      fi
      echo "HOSTNAME_OVERRIDE=${HOSTNAME_OVERRIDE}" > /etc/hostname-override
  - path: /etc/kube-env
    permissions: 0644
    owner: root
    content: |
coreos:
  etcd2:
    listen-client-urls: http://localhost:2379
    initial-cluster: master=http://10.19.1.214:2380
    proxy: on
  fleet:
    etcd_servers: http://localhost:2379
    metadata: k8srole=node
  flannel:
    etcd_endpoints: http://localhost:2379
  units:
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: flanneld.service
      command: start
    - name: docker.service
      command: start
    - name: hostname-override.service
      command: start
      content: |
        [Unit]
        Description=Kubelet Hostname Override
        Requires=network-online.target
        After=network-online.target

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        EnvironmentFile=/etc/kube-env
        ExecStart=/run/setup-hostname-override.sh
    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=hostname-override.service
        After=hostname-override.service

        [Service]
        EnvironmentFile=/etc/kube-env
        EnvironmentFile=/etc/hostname-override
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kubelet -z /opt/bin/kubelet https://storage.googleapis.com/kubernetes-release/release/v1.1.3/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStart=/opt/bin/kubelet \
        --api-servers=10.19.1.214:8080 \
        --address=0.0.0.0 \
        --port=10250 \
        --logtostderr=true \
        --cadvisor-port=4194 \
        --healthz-bind-address=0.0.0.0 \
        --healthz-port=10248 \
        --hostname-override=${HOSTNAME_OVERRIDE}
        Restart=always
        RestartSec=10
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=network-online.target
        After=network-online.target

        [Service]
        EnvironmentFile=/etc/kube-env
        EnvironmentFile=/etc/hostname-override
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-proxy -z /opt/bin/kube-proxy https://storage.googleapis.com/kubernetes-release/release/v1.1.3/bin/linux/amd64/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        ExecStart=/opt/bin/kube-proxy \
        --master=http://10.19.1.214:8080 \
        --proxy-mode=iptables \
        --logtostderr=true \
        Restart=always
        RestartSec=10
    - name: sysdig-agent.service
      command: start
      content: |
        [Unit]
         Description=Sysdig Cloud Agent
         After=docker.service
         Requires=docker.service
         [Service]
         TimeoutStartSec=0
         ExecStartPre=-/usr/bin/docker kill sysdig-agent
         ExecStartPre=-/usr/bin/docker rm sysdig-agent
         ExecStartPre=/usr/bin/docker pull sysdig/agent
         ExecStart=/usr/bin/docker run --name sysdig-agent --privileged --net host --pid host -e ACCESS_KEY=e0b0fe87-c8e8-4890-a469-222be5abaede -e [TAGS=ServerGroup:VIA\ GO\ ProdCloud] -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v /boot:/host/boot:ro sysdig/agent
         ExecStop=/usr/bin/docker stop sysdig-agent
  update:
    group: stable
    reboot-strategy: off
